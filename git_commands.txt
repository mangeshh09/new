git config --global user.name "mangeshh09"
git config --global user.email "mangeshgdj@gmail.com"
git config --list

git --version
git clone "http/"
cd NEW
git ls-files
ls -a //shows the hidden files
git status
git add filename
git add . 	//add the all files
git commit -m "message"
git push origin main	// push the newly created or modified file
cd .. //exiting from the directory
mkdir directory_name	//make new directory(folder)
git init //used to create new git repo
git remote add origin reponame //adding repository to git hub(remote location)
git remote -v //verify remote repo
git branch  //to check the currently working branch
git branch -m new_branch_name   //to modify the name of branch
git push -u(upstream) origin main   //when we perform push operation next time ,only need to give "git push" command

GIT BRANCH COMMANDS
git branch  //to check the currently working branch
git branch -m new_branch_name   //to modify the name of branch
git checkout new_branch_name    //to change the branch
git checkout -b new_branch_name    //to crate new branch
git branch -d checkout    //to delete the branch
git push origin new_branch_name //push new features into new new_branch

MERGING FEATURE AND MAIN BRANCH using command line
git diff new_branch //checking differences in current branch and another branch
git merge branch_name //merge the current branch and another branch

PULL COMMAND
used to fetch and download content from a remote repo and immediately update the local repo to match that content
git pull origin main 

MERGE CONFLICTS
an event that takes place when git is unable to automatically resolve differences in code between two commits


UNDOING CHANGES
1.STAGED CHANGES (CHANGES WHICH GET ADD BUT NOT COMMITED)
    git reset filename  //only for single file
    git reset           //for multiple files

git log // to check the commit records


2.COMMITED CHANGES (CHANGES WHICH GET ADD AND ALSO GET COMMITED)
    git reset HEAD~1 //for 1 commit only

3.GIT CHANGES FOR MULTIPLE commits
    git reset <hashcode>
    git reset --hard <hashcode> //to remove the changes from the codeeditor also
